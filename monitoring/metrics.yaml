apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: app-ingress
  labels:
    app: app-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: arch.homework
      http:
        paths:
          - path: /metrics
            backend:
              serviceName: metrics-service
              servicePort: 8000
---                  
apiVersion: v1
kind: Service
metadata:
  name: metrics-service
  labels:
    app: metrics-service
    app.kubernetes.io/name: metrics
    app.kubernetes.io/instance: RELEASE-NAME
spec:
  type: NodePort
  selector:
    app: metrics-deployment
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
      name: web
---
apiVersion: v1
kind: Service
metadata:
  name: metricsql-service
  labels:
    app.kubernetes.io/name: metrics
    app.kubernetes.io/instance: RELEASE-NAME
spec:
  type: NodePort
  selector:
    app: metricsql-deployment
  ports:
    - port: 5432
---   
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-deployment
  labels:
    app: metrics-deployment
    app.kubernetes.io/name: metrics
    app.kubernetes.io/instance: RELEASE-NAME
spec:
  replicas: 1
  selector:
    matchLabels:
          app: metrics-deployment
  template:
    metadata:
      labels:
        app: metrics-deployment
        app.kubernetes.io/name: metrics
        app.kubernetes.io/instance: RELEASE-NAME
    spec:
      containers:
        - name: metrics-deployment
          image: helloips/metrics:1.0
          ports:
            - name: web
              containerPort: 8000
          env:
            - name: SERVER_PORT
              valueFrom:
                configMapKeyRef:
                  name: metrics-configmap
                  key: SERVER_PORT
            - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
              valueFrom:
                configMapKeyRef:
                  name: metrics-configmap
                  key: SPRING_DATASOURCE_DRIVER_CLASS_NAME
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              valueFrom:
                configMapKeyRef:
                  name: metrics-configmap
                  key: SPRING_JPA_HIBERNATE_DDL_AUTO
            - name: SPRING_JPA_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: metrics-configmap
                  key: SPRING_JPA_DATABASE
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                secretKeyRef:
                  name: metrics-secret
                  key: SPRING_DATASOURCE_URL
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: metrics-secret
                  key: SPRING_DATASOURCE_USERNAME
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: metrics-secret
                  key: SPRING_DATASOURCE_PASSWORD
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: metricsql-deployment
  labels:
    app: metricsql-deployment
    app.kubernetes.io/name: metrics
    app.kubernetes.io/instance: RELEASE-NAME
spec:
  serviceName: "postgres"
  replicas: 1
  selector:
    matchLabels:
      app: metricsql-deployment
  template:
    metadata:
      labels:
        app: metricsql-deployment
        app.kubernetes.io/name: metrics
        app.kubernetes.io/instance: RELEASE-NAME
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          ports:
            - containerPort: 5432
              name: postgredb
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: metrics-secret
                  key: DATABASE_NAME
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: metrics-secret
                  key: SPRING_DATASOURCE_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: metrics-secret
                  key: SPRING_DATASOURCE_PASSWORD
          volumeMounts:
            - name: postgredb
              mountPath: /var/lib/postgresql/data
              subPath: postgres
  volumeClaimTemplates:
    - metadata:
        name: postgredb
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: standard
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: metrics-secret
type: Opaque
data:
  DATABASE_USERNAME: YWRtaW4=
  DATABASE_PASSWORD: cGFzc3dvcmQ=
  DATABASE_NAME: ZGI=
  SPRING_DATASOURCE_URL: "amRiYzpwb3N0Z3Jlc3FsOi8vbWV0cmljc3FsLXNlcnZpY2U6NTQzMi9kYg=="
  SPRING_DATASOURCE_USERNAME: YWRtaW4=
  SPRING_DATASOURCE_PASSWORD: cGFzc3dvcmQ=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metrics-configmap
data:
  SERVER_PORT: "8000"
  SPRING_JPA_DATABASE: "postgresql"
  SPRING_JPA_HIBERNATE_DDL_AUTO: "create"
  SPRING_DATASOURCE_DRIVER_CLASS_NAME: "org.postgresql.Driver"